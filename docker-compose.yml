version: '3.8'

services:
  api:
    build: .
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./datasets:/app/datasets
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=deepsandbox
      - POSTGRES_PASSWORD=deepsandbox
      - POSTGRES_DB=deepsandbox
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_TITLE=DeepSandbox Go API
      - API_DESCRIPTION=Secure and scalable API for executing Python data analysis on client datasets
      - API_VERSION=1.0.0
      - SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
    depends_on:
      - db
      - redis
    networks:
      - deepsandbox-network

  db:
    image: postgres:14-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=deepsandbox
      - POSTGRES_PASSWORD=deepsandbox
      - POSTGRES_DB=deepsandbox
    ports:
      - "5432:5432"
    networks:
      - deepsandbox-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U deepsandbox"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - deepsandbox-network
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - deepsandbox-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:

networks:
  deepsandbox-network:
    driver: bridge 